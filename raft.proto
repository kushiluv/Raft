syntax = "proto3";

package raft;

// The raft service definition.
service Raft {
  // Sends a heartbeat and log entries to a follower
  rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse) {}
  // Requests a vote from a follower
  rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse) {}
  // Serves client requests
  rpc ServeClient (ServeClientArgs) returns (ServeClientReply) {}
}

// AppendEntries RPC
message AppendEntriesRequest {
  int64 term = 1;
  string leaderId = 2;
  int64 prevLogIndex = 3;
  int64 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  int64 leaderCommit = 6;
  int64 leaseInterval = 7; // For leader lease
}

message AppendEntriesResponse {
  int64 term = 1;
  bool success = 2;
}

// RequestVote RPC
message RequestVoteRequest {
  int64 term = 1;
  string candidateId = 2;
  int64 lastLogIndex = 3;
  int64 lastLogTerm = 4;
}

message RequestVoteResponse {
  int64 term = 1;
  bool voteGranted = 2;
  int64 leaseDuration = 3; // For leader lease
}

// Log entry
message LogEntry {
  int64 term = 1;
  string command = 2;
}

// Client service
message ServeClientArgs {
  string request = 1;
}

message ServeClientReply {
  string data = 1;
  string leaderId = 2;
  bool success = 3;
}
